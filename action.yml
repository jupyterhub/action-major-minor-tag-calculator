# Reference: https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions
---
author: Simon Li
name: major-minor-tag-calculator
description: |-
  Calculate major and minor semver tags, e.g. for tagging containers.
  The default is for the action to fetch and parse git tags.
  Alternatively you can provide the list of existing tags and the new tag,
  and this action will calculate the output tags without looking at Git.
  This action returns all considered tags so they can be passed to a second
  invocation of the action without re-fetching the same Git tags.

# Manually keep the input-, and output- descriptions in sync with the readme!
inputs:
  githubToken:
    required: false
    description: |-
      The GitHub token, required so this action can fetch tags using the GitHub API. If this parameter is not set then `defaultTag` (if set) or an empty list will be returned.
      Omit this if existingTags and currentTag are provided.
    default: ""
  existingTags:
    required: false
    description: |-
      List of existing tags as a JSON array, provide this if you aren't processing Git tags
    default: ""
  currentTag:
    required: false
    description: |-
      The current (new) tag, provide this if you aren't processing Git tags
    default: ""
  prefix:
    required: false
    description: |-
      One or more whitespace or comma delimited prefixes for returned tags.

      As an example, prefix could be set to `ghcr.io/a/b: quay.io/a/b:` to
      provide image names with tags for two separate repositories.

      The string `""` can be used to represent an empty string, and
      all combinations of prefixes and suffixes are used.
    default: ""
  suffix:
    required: false
    description: |-
      One or more whitespace or comma delimited suffixes for returned tags.

      As an example, suffix could be set to `"" -debian` to provide
      a default image variant without suffix next to an image variant referred
      to with a -debian suffix.

      The string `""` can be used to represent an empty string, and
      all combinations of prefixes and suffixes are used.
    default: ""
  defaultTag:
    required: false
    description: |-
      If the tag output would be empty return this tag instead.
      This can be useful for running a workflow in pull requests where no suitable git references are present.
      `prefix` or `suffix` are _not_ automatically added.
    default: ""
  branchRegex:
    required: false
    description: |-
      If a branch name does not match this regex return `defaultTag` or empty instead.
    default: "^[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127}$"
outputs:
  existingTags:
    description: |-
      If this action was configured to fetch Git tags: if this is a tagged commit then
      this is a list of all fetched Git tags, otherwise null.
      Otherwise this is the same as inputs.existingTags.
  currentTag:
    description: |-
      If this action was configured to fetch Git tags: if this is a tagged commit then
      this is the current Git tag, otherwise null (inputs.defaultTag is not returned).
      Otherwise this is the same as inputs.currentTag.
  tags:
    description: A JSON formatted list of calculated tags.

runs:
  using: node20
  main: dist/index.js

branding:
  icon: bookmark
  color: purple
